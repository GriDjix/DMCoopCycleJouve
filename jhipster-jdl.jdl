application {
	config {
		baseName coopcycle,
		applicationType monolith,
		packageName com.mycompany.myapp,
		authenticationType jwt,
		prodDatabaseType postgresql,
		clientFramework react,
		buildTool maven,
		languages [ en, fr, es, ja, ko ]
	}

  entities *
}

entity User {
	id UUID unique required
  	name String required minlength(3) maxlength(50)
  	email String required unique pattern(/^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_-]+)\.([a-zA-Z]{2,5})$/)
  	password String required minlength(8) maxlength(50)
  	phone String required pattern(/^(\+\d{1,3}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/)
  	address String minlength(5) maxlength(100)
  	city String minlength(3) maxlength(50)
  	country String minlength(3) maxlength(50)
  	isVerified Boolean
}

entity Restaurant {
	id UUID unique required
  	name String required minlength(3) maxlength(50)
  	description String maxlength(200)
  	address String required minlength(5) maxlength(100)
  	city String required minlength(3) maxlength(50)
  	country String required minlength(3) maxlength(50)
  	phone String required pattern(/^(\+\d{1,3}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/)
  	email String required pattern(/^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_-]+)\.([a-zA-Z]{2,5})$/)
}

entity Order {
	id UUID unique required
  	orderDate Instant required
  	totalPrice Double required min(0)
  	deliveryAddress String required minlength(5) maxlength(100)
  	deliveryCity String required minlength(3) maxlength(50)
  	deliveryCountry String required minlength(3) maxlength(50)
  	deliveryTime ZonedDateTime required
}

entity Meal {
	id UUID unique required
	name String required minlength(3) maxlength(50)
  	description String required minlength(10) maxlength(200)
  	price Double required min(0)
}


relationship OneToMany {
	Restaurant to Meal
	Order to Meal
}
  
relationship ManyToOne {
	Order to User
	Order to Restaurant
}


dto * with mapstruct
